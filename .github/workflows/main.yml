name: Deploy FE App

on:
    push:
        branches: ["master", "dev"]

jobs:
    notify-start:
        runs-on: ubuntu-latest
        steps:
            - name: Set Start Time
              id: start-time
              run: echo "start_time=$(date +%s)" >> $GITHUB_OUTPUT

            - name: Notify start on Discord
              run: |
                  curl -H "Content-Type: application/json" \
                  -X POST \
                  -d "{\"content\": \"üöÄ **mediflow ¬ª mediflow-fe - #${{ github.run_number }}** Started by \`${{ github.actor }}\` ([view run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}))\"}" \
                  ${{ secrets.DISCORD_WEBHOOK }}

            - name: Save start time
              run: |
                  echo "${{ steps.start-time.outputs.start_time }}" > start_time.txt
                  mkdir -p artifacts
                  mv start_time.txt artifacts/

            - name: Upload start time artifact
              uses: actions/upload-artifact@v4
              with:
                  name: start-time
                  path: artifacts/start_time.txt

    build:
        runs-on: ubuntu-latest
        needs: notify-start
        strategy:
            matrix:
                node-version: [22.x]
        steps:
            - uses: actions/checkout@v4

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "yarn"

            - name: Create .env file
              run: |
                  echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" >> .env
                  echo "VITE_BASE_URL=${{ secrets.VITE_BASE_URL }}" >> .env

            - name: Install dependencies
              run: yarn install

            - name: Build Vite app
              run: yarn build

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-artifacts
                  path: ./dist

    deployment:
        runs-on: ubuntu-latest
        needs: build

        steps:
            - name: Download dist folder
              uses: actions/download-artifact@v4
              with:
                  name: build-artifacts
                  path: dist

            - name: Install Netlify CLI
              run: |
                  yarn global add netlify-cli

            - name: Deploy to Netlify
              run: |
                  netlify deploy --prod --dir=./dist --message "Deployed from GitHub Actions üöÄ" --auth ${{ secrets.NETLIFY_ACCESS_TOKEN }} --site ${{ secrets.NETLIFY_SITE_ID }} --build false

    notify-result:
        runs-on: ubuntu-latest
        needs: [notify-start, build, deployment]
        if: always()

        steps:
            - name: Set Duration
              id: duration
              run: echo "end_time=$(date +%s)" >> $GITHUB_OUTPUT

            - name: Notify success
              if: ${{ needs.build.result == 'success' && needs.deployment.result == 'success' }}
              run: |
                  curl -H "Content-Type: application/json" \
                  -X POST \
                  -d "{\"content\": \"‚úÖ **mediflow ¬ª mediflow-fe - #${{ github.run_number }}** Success ([view run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}))\"}" \
                  ${{ secrets.DISCORD_WEBHOOK }}

            - name: Notify failure
              if: ${{ needs.build.result != 'success' || needs.deployment.result != 'success' }}
              run: |
                  curl -H "Content-Type: application/json" \
                  -X POST \
                  -d "{\"content\": \"‚ùå **mediflow ¬ª mediflow-fe - #${{ github.run_number }}** Failed. Triggered by \`${{ github.actor }}\` ([view run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}))\"}" \
                  ${{ secrets.DISCORD_WEBHOOK }}
